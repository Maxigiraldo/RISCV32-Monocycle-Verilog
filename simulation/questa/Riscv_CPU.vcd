$date
	Fri Oct 17 17:26:46 2025
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module TB_Riscv_CPU $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var wire 1 # out_alu_result [31] $end
$var wire 1 $ out_alu_result [30] $end
$var wire 1 % out_alu_result [29] $end
$var wire 1 & out_alu_result [28] $end
$var wire 1 ' out_alu_result [27] $end
$var wire 1 ( out_alu_result [26] $end
$var wire 1 ) out_alu_result [25] $end
$var wire 1 * out_alu_result [24] $end
$var wire 1 + out_alu_result [23] $end
$var wire 1 , out_alu_result [22] $end
$var wire 1 - out_alu_result [21] $end
$var wire 1 . out_alu_result [20] $end
$var wire 1 / out_alu_result [19] $end
$var wire 1 0 out_alu_result [18] $end
$var wire 1 1 out_alu_result [17] $end
$var wire 1 2 out_alu_result [16] $end
$var wire 1 3 out_alu_result [15] $end
$var wire 1 4 out_alu_result [14] $end
$var wire 1 5 out_alu_result [13] $end
$var wire 1 6 out_alu_result [12] $end
$var wire 1 7 out_alu_result [11] $end
$var wire 1 8 out_alu_result [10] $end
$var wire 1 9 out_alu_result [9] $end
$var wire 1 : out_alu_result [8] $end
$var wire 1 ; out_alu_result [7] $end
$var wire 1 < out_alu_result [6] $end
$var wire 1 = out_alu_result [5] $end
$var wire 1 > out_alu_result [4] $end
$var wire 1 ? out_alu_result [3] $end
$var wire 1 @ out_alu_result [2] $end
$var wire 1 A out_alu_result [1] $end
$var wire 1 B out_alu_result [0] $end
$var wire 1 C hex0 [6] $end
$var wire 1 D hex0 [5] $end
$var wire 1 E hex0 [4] $end
$var wire 1 F hex0 [3] $end
$var wire 1 G hex0 [2] $end
$var wire 1 H hex0 [1] $end
$var wire 1 I hex0 [0] $end
$var wire 1 J hex1 [6] $end
$var wire 1 K hex1 [5] $end
$var wire 1 L hex1 [4] $end
$var wire 1 M hex1 [3] $end
$var wire 1 N hex1 [2] $end
$var wire 1 O hex1 [1] $end
$var wire 1 P hex1 [0] $end
$var wire 1 Q hex2 [6] $end
$var wire 1 R hex2 [5] $end
$var wire 1 S hex2 [4] $end
$var wire 1 T hex2 [3] $end
$var wire 1 U hex2 [2] $end
$var wire 1 V hex2 [1] $end
$var wire 1 W hex2 [0] $end
$var wire 1 X hex3 [6] $end
$var wire 1 Y hex3 [5] $end
$var wire 1 Z hex3 [4] $end
$var wire 1 [ hex3 [3] $end
$var wire 1 \ hex3 [2] $end
$var wire 1 ] hex3 [1] $end
$var wire 1 ^ hex3 [0] $end
$var wire 1 _ hex4 [6] $end
$var wire 1 ` hex4 [5] $end
$var wire 1 a hex4 [4] $end
$var wire 1 b hex4 [3] $end
$var wire 1 c hex4 [2] $end
$var wire 1 d hex4 [1] $end
$var wire 1 e hex4 [0] $end

$scope module DUT $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 # out_alu_result [31] $end
$var wire 1 $ out_alu_result [30] $end
$var wire 1 % out_alu_result [29] $end
$var wire 1 & out_alu_result [28] $end
$var wire 1 ' out_alu_result [27] $end
$var wire 1 ( out_alu_result [26] $end
$var wire 1 ) out_alu_result [25] $end
$var wire 1 * out_alu_result [24] $end
$var wire 1 + out_alu_result [23] $end
$var wire 1 , out_alu_result [22] $end
$var wire 1 - out_alu_result [21] $end
$var wire 1 . out_alu_result [20] $end
$var wire 1 / out_alu_result [19] $end
$var wire 1 0 out_alu_result [18] $end
$var wire 1 1 out_alu_result [17] $end
$var wire 1 2 out_alu_result [16] $end
$var wire 1 3 out_alu_result [15] $end
$var wire 1 4 out_alu_result [14] $end
$var wire 1 5 out_alu_result [13] $end
$var wire 1 6 out_alu_result [12] $end
$var wire 1 7 out_alu_result [11] $end
$var wire 1 8 out_alu_result [10] $end
$var wire 1 9 out_alu_result [9] $end
$var wire 1 : out_alu_result [8] $end
$var wire 1 ; out_alu_result [7] $end
$var wire 1 < out_alu_result [6] $end
$var wire 1 = out_alu_result [5] $end
$var wire 1 > out_alu_result [4] $end
$var wire 1 ? out_alu_result [3] $end
$var wire 1 @ out_alu_result [2] $end
$var wire 1 A out_alu_result [1] $end
$var wire 1 B out_alu_result [0] $end
$var wire 1 C hex0 [6] $end
$var wire 1 D hex0 [5] $end
$var wire 1 E hex0 [4] $end
$var wire 1 F hex0 [3] $end
$var wire 1 G hex0 [2] $end
$var wire 1 H hex0 [1] $end
$var wire 1 I hex0 [0] $end
$var wire 1 J hex1 [6] $end
$var wire 1 K hex1 [5] $end
$var wire 1 L hex1 [4] $end
$var wire 1 M hex1 [3] $end
$var wire 1 N hex1 [2] $end
$var wire 1 O hex1 [1] $end
$var wire 1 P hex1 [0] $end
$var wire 1 Q hex2 [6] $end
$var wire 1 R hex2 [5] $end
$var wire 1 S hex2 [4] $end
$var wire 1 T hex2 [3] $end
$var wire 1 U hex2 [2] $end
$var wire 1 V hex2 [1] $end
$var wire 1 W hex2 [0] $end
$var wire 1 X hex3 [6] $end
$var wire 1 Y hex3 [5] $end
$var wire 1 Z hex3 [4] $end
$var wire 1 [ hex3 [3] $end
$var wire 1 \ hex3 [2] $end
$var wire 1 ] hex3 [1] $end
$var wire 1 ^ hex3 [0] $end
$var wire 1 _ hex4 [6] $end
$var wire 1 ` hex4 [5] $end
$var wire 1 a hex4 [4] $end
$var wire 1 b hex4 [3] $end
$var wire 1 c hex4 [2] $end
$var wire 1 d hex4 [1] $end
$var wire 1 e hex4 [0] $end
$var wire 1 h pc_out [31] $end
$var wire 1 i pc_out [30] $end
$var wire 1 j pc_out [29] $end
$var wire 1 k pc_out [28] $end
$var wire 1 l pc_out [27] $end
$var wire 1 m pc_out [26] $end
$var wire 1 n pc_out [25] $end
$var wire 1 o pc_out [24] $end
$var wire 1 p pc_out [23] $end
$var wire 1 q pc_out [22] $end
$var wire 1 r pc_out [21] $end
$var wire 1 s pc_out [20] $end
$var wire 1 t pc_out [19] $end
$var wire 1 u pc_out [18] $end
$var wire 1 v pc_out [17] $end
$var wire 1 w pc_out [16] $end
$var wire 1 x pc_out [15] $end
$var wire 1 y pc_out [14] $end
$var wire 1 z pc_out [13] $end
$var wire 1 { pc_out [12] $end
$var wire 1 | pc_out [11] $end
$var wire 1 } pc_out [10] $end
$var wire 1 ~ pc_out [9] $end
$var wire 1 !! pc_out [8] $end
$var wire 1 "! pc_out [7] $end
$var wire 1 #! pc_out [6] $end
$var wire 1 $! pc_out [5] $end
$var wire 1 %! pc_out [4] $end
$var wire 1 &! pc_out [3] $end
$var wire 1 '! pc_out [2] $end
$var wire 1 (! pc_out [1] $end
$var wire 1 )! pc_out [0] $end
$var wire 1 *! instruction [31] $end
$var wire 1 +! instruction [30] $end
$var wire 1 ,! instruction [29] $end
$var wire 1 -! instruction [28] $end
$var wire 1 .! instruction [27] $end
$var wire 1 /! instruction [26] $end
$var wire 1 0! instruction [25] $end
$var wire 1 1! instruction [24] $end
$var wire 1 2! instruction [23] $end
$var wire 1 3! instruction [22] $end
$var wire 1 4! instruction [21] $end
$var wire 1 5! instruction [20] $end
$var wire 1 6! instruction [19] $end
$var wire 1 7! instruction [18] $end
$var wire 1 8! instruction [17] $end
$var wire 1 9! instruction [16] $end
$var wire 1 :! instruction [15] $end
$var wire 1 ;! instruction [14] $end
$var wire 1 <! instruction [13] $end
$var wire 1 =! instruction [12] $end
$var wire 1 >! instruction [11] $end
$var wire 1 ?! instruction [10] $end
$var wire 1 @! instruction [9] $end
$var wire 1 A! instruction [8] $end
$var wire 1 B! instruction [7] $end
$var wire 1 C! instruction [6] $end
$var wire 1 D! instruction [5] $end
$var wire 1 E! instruction [4] $end
$var wire 1 F! instruction [3] $end
$var wire 1 G! instruction [2] $end
$var wire 1 H! instruction [1] $end
$var wire 1 I! instruction [0] $end
$var wire 1 J! rs1 [4] $end
$var wire 1 K! rs1 [3] $end
$var wire 1 L! rs1 [2] $end
$var wire 1 M! rs1 [1] $end
$var wire 1 N! rs1 [0] $end
$var wire 1 O! rs2 [4] $end
$var wire 1 P! rs2 [3] $end
$var wire 1 Q! rs2 [2] $end
$var wire 1 R! rs2 [1] $end
$var wire 1 S! rs2 [0] $end
$var wire 1 T! rd [4] $end
$var wire 1 U! rd [3] $end
$var wire 1 V! rd [2] $end
$var wire 1 W! rd [1] $end
$var wire 1 X! rd [0] $end
$var wire 1 Y! rd1_data [31] $end
$var wire 1 Z! rd1_data [30] $end
$var wire 1 [! rd1_data [29] $end
$var wire 1 \! rd1_data [28] $end
$var wire 1 ]! rd1_data [27] $end
$var wire 1 ^! rd1_data [26] $end
$var wire 1 _! rd1_data [25] $end
$var wire 1 `! rd1_data [24] $end
$var wire 1 a! rd1_data [23] $end
$var wire 1 b! rd1_data [22] $end
$var wire 1 c! rd1_data [21] $end
$var wire 1 d! rd1_data [20] $end
$var wire 1 e! rd1_data [19] $end
$var wire 1 f! rd1_data [18] $end
$var wire 1 g! rd1_data [17] $end
$var wire 1 h! rd1_data [16] $end
$var wire 1 i! rd1_data [15] $end
$var wire 1 j! rd1_data [14] $end
$var wire 1 k! rd1_data [13] $end
$var wire 1 l! rd1_data [12] $end
$var wire 1 m! rd1_data [11] $end
$var wire 1 n! rd1_data [10] $end
$var wire 1 o! rd1_data [9] $end
$var wire 1 p! rd1_data [8] $end
$var wire 1 q! rd1_data [7] $end
$var wire 1 r! rd1_data [6] $end
$var wire 1 s! rd1_data [5] $end
$var wire 1 t! rd1_data [4] $end
$var wire 1 u! rd1_data [3] $end
$var wire 1 v! rd1_data [2] $end
$var wire 1 w! rd1_data [1] $end
$var wire 1 x! rd1_data [0] $end
$var wire 1 y! rd2_data [31] $end
$var wire 1 z! rd2_data [30] $end
$var wire 1 {! rd2_data [29] $end
$var wire 1 |! rd2_data [28] $end
$var wire 1 }! rd2_data [27] $end
$var wire 1 ~! rd2_data [26] $end
$var wire 1 !" rd2_data [25] $end
$var wire 1 "" rd2_data [24] $end
$var wire 1 #" rd2_data [23] $end
$var wire 1 $" rd2_data [22] $end
$var wire 1 %" rd2_data [21] $end
$var wire 1 &" rd2_data [20] $end
$var wire 1 '" rd2_data [19] $end
$var wire 1 (" rd2_data [18] $end
$var wire 1 )" rd2_data [17] $end
$var wire 1 *" rd2_data [16] $end
$var wire 1 +" rd2_data [15] $end
$var wire 1 ," rd2_data [14] $end
$var wire 1 -" rd2_data [13] $end
$var wire 1 ." rd2_data [12] $end
$var wire 1 /" rd2_data [11] $end
$var wire 1 0" rd2_data [10] $end
$var wire 1 1" rd2_data [9] $end
$var wire 1 2" rd2_data [8] $end
$var wire 1 3" rd2_data [7] $end
$var wire 1 4" rd2_data [6] $end
$var wire 1 5" rd2_data [5] $end
$var wire 1 6" rd2_data [4] $end
$var wire 1 7" rd2_data [3] $end
$var wire 1 8" rd2_data [2] $end
$var wire 1 9" rd2_data [1] $end
$var wire 1 :" rd2_data [0] $end
$var wire 1 ;" immediate [31] $end
$var wire 1 <" immediate [30] $end
$var wire 1 =" immediate [29] $end
$var wire 1 >" immediate [28] $end
$var wire 1 ?" immediate [27] $end
$var wire 1 @" immediate [26] $end
$var wire 1 A" immediate [25] $end
$var wire 1 B" immediate [24] $end
$var wire 1 C" immediate [23] $end
$var wire 1 D" immediate [22] $end
$var wire 1 E" immediate [21] $end
$var wire 1 F" immediate [20] $end
$var wire 1 G" immediate [19] $end
$var wire 1 H" immediate [18] $end
$var wire 1 I" immediate [17] $end
$var wire 1 J" immediate [16] $end
$var wire 1 K" immediate [15] $end
$var wire 1 L" immediate [14] $end
$var wire 1 M" immediate [13] $end
$var wire 1 N" immediate [12] $end
$var wire 1 O" immediate [11] $end
$var wire 1 P" immediate [10] $end
$var wire 1 Q" immediate [9] $end
$var wire 1 R" immediate [8] $end
$var wire 1 S" immediate [7] $end
$var wire 1 T" immediate [6] $end
$var wire 1 U" immediate [5] $end
$var wire 1 V" immediate [4] $end
$var wire 1 W" immediate [3] $end
$var wire 1 X" immediate [2] $end
$var wire 1 Y" immediate [1] $end
$var wire 1 Z" immediate [0] $end
$var wire 1 [" opcode [6] $end
$var wire 1 \" opcode [5] $end
$var wire 1 ]" opcode [4] $end
$var wire 1 ^" opcode [3] $end
$var wire 1 _" opcode [2] $end
$var wire 1 `" opcode [1] $end
$var wire 1 a" opcode [0] $end
$var wire 1 b" funct3 [2] $end
$var wire 1 c" funct3 [1] $end
$var wire 1 d" funct3 [0] $end
$var wire 1 e" funct7 [6] $end
$var wire 1 f" funct7 [5] $end
$var wire 1 g" funct7 [4] $end
$var wire 1 h" funct7 [3] $end
$var wire 1 i" funct7 [2] $end
$var wire 1 j" funct7 [1] $end
$var wire 1 k" funct7 [0] $end
$var wire 1 l" reg_write $end
$var wire 1 m" alu_src $end
$var wire 1 n" alu_op [1] $end
$var wire 1 o" alu_op [0] $end
$var wire 1 p" alu_control [3] $end
$var wire 1 q" alu_control [2] $end
$var wire 1 r" alu_control [1] $end
$var wire 1 s" alu_control [0] $end
$var wire 1 t" alu_operand_b [31] $end
$var wire 1 u" alu_operand_b [30] $end
$var wire 1 v" alu_operand_b [29] $end
$var wire 1 w" alu_operand_b [28] $end
$var wire 1 x" alu_operand_b [27] $end
$var wire 1 y" alu_operand_b [26] $end
$var wire 1 z" alu_operand_b [25] $end
$var wire 1 {" alu_operand_b [24] $end
$var wire 1 |" alu_operand_b [23] $end
$var wire 1 }" alu_operand_b [22] $end
$var wire 1 ~" alu_operand_b [21] $end
$var wire 1 !# alu_operand_b [20] $end
$var wire 1 "# alu_operand_b [19] $end
$var wire 1 ## alu_operand_b [18] $end
$var wire 1 $# alu_operand_b [17] $end
$var wire 1 %# alu_operand_b [16] $end
$var wire 1 &# alu_operand_b [15] $end
$var wire 1 '# alu_operand_b [14] $end
$var wire 1 (# alu_operand_b [13] $end
$var wire 1 )# alu_operand_b [12] $end
$var wire 1 *# alu_operand_b [11] $end
$var wire 1 +# alu_operand_b [10] $end
$var wire 1 ,# alu_operand_b [9] $end
$var wire 1 -# alu_operand_b [8] $end
$var wire 1 .# alu_operand_b [7] $end
$var wire 1 /# alu_operand_b [6] $end
$var wire 1 0# alu_operand_b [5] $end
$var wire 1 1# alu_operand_b [4] $end
$var wire 1 2# alu_operand_b [3] $end
$var wire 1 3# alu_operand_b [2] $end
$var wire 1 4# alu_operand_b [1] $end
$var wire 1 5# alu_operand_b [0] $end
$var wire 1 6# alu_result [31] $end
$var wire 1 7# alu_result [30] $end
$var wire 1 8# alu_result [29] $end
$var wire 1 9# alu_result [28] $end
$var wire 1 :# alu_result [27] $end
$var wire 1 ;# alu_result [26] $end
$var wire 1 <# alu_result [25] $end
$var wire 1 =# alu_result [24] $end
$var wire 1 ># alu_result [23] $end
$var wire 1 ?# alu_result [22] $end
$var wire 1 @# alu_result [21] $end
$var wire 1 A# alu_result [20] $end
$var wire 1 B# alu_result [19] $end
$var wire 1 C# alu_result [18] $end
$var wire 1 D# alu_result [17] $end
$var wire 1 E# alu_result [16] $end
$var wire 1 F# alu_result [15] $end
$var wire 1 G# alu_result [14] $end
$var wire 1 H# alu_result [13] $end
$var wire 1 I# alu_result [12] $end
$var wire 1 J# alu_result [11] $end
$var wire 1 K# alu_result [10] $end
$var wire 1 L# alu_result [9] $end
$var wire 1 M# alu_result [8] $end
$var wire 1 N# alu_result [7] $end
$var wire 1 O# alu_result [6] $end
$var wire 1 P# alu_result [5] $end
$var wire 1 Q# alu_result [4] $end
$var wire 1 R# alu_result [3] $end
$var wire 1 S# alu_result [2] $end
$var wire 1 T# alu_result [1] $end
$var wire 1 U# alu_result [0] $end
$var wire 1 V# alu_zero $end
$var wire 1 W# write_back_data [31] $end
$var wire 1 X# write_back_data [30] $end
$var wire 1 Y# write_back_data [29] $end
$var wire 1 Z# write_back_data [28] $end
$var wire 1 [# write_back_data [27] $end
$var wire 1 \# write_back_data [26] $end
$var wire 1 ]# write_back_data [25] $end
$var wire 1 ^# write_back_data [24] $end
$var wire 1 _# write_back_data [23] $end
$var wire 1 `# write_back_data [22] $end
$var wire 1 a# write_back_data [21] $end
$var wire 1 b# write_back_data [20] $end
$var wire 1 c# write_back_data [19] $end
$var wire 1 d# write_back_data [18] $end
$var wire 1 e# write_back_data [17] $end
$var wire 1 f# write_back_data [16] $end
$var wire 1 g# write_back_data [15] $end
$var wire 1 h# write_back_data [14] $end
$var wire 1 i# write_back_data [13] $end
$var wire 1 j# write_back_data [12] $end
$var wire 1 k# write_back_data [11] $end
$var wire 1 l# write_back_data [10] $end
$var wire 1 m# write_back_data [9] $end
$var wire 1 n# write_back_data [8] $end
$var wire 1 o# write_back_data [7] $end
$var wire 1 p# write_back_data [6] $end
$var wire 1 q# write_back_data [5] $end
$var wire 1 r# write_back_data [4] $end
$var wire 1 s# write_back_data [3] $end
$var wire 1 t# write_back_data [2] $end
$var wire 1 u# write_back_data [1] $end
$var wire 1 v# write_back_data [0] $end
$var wire 1 w# pc_next $end
$var wire 1 x# hex_d0 [3] $end
$var wire 1 y# hex_d0 [2] $end
$var wire 1 z# hex_d0 [1] $end
$var wire 1 {# hex_d0 [0] $end
$var wire 1 |# hex_d1 [3] $end
$var wire 1 }# hex_d1 [2] $end
$var wire 1 ~# hex_d1 [1] $end
$var wire 1 !$ hex_d1 [0] $end
$var wire 1 "$ hex_d2 [3] $end
$var wire 1 #$ hex_d2 [2] $end
$var wire 1 $$ hex_d2 [1] $end
$var wire 1 %$ hex_d2 [0] $end
$var wire 1 &$ hex_d3 [3] $end
$var wire 1 '$ hex_d3 [2] $end
$var wire 1 ($ hex_d3 [1] $end
$var wire 1 )$ hex_d3 [0] $end
$var wire 1 *$ hex_d4 [3] $end
$var wire 1 +$ hex_d4 [2] $end
$var wire 1 ,$ hex_d4 [1] $end
$var wire 1 -$ hex_d4 [0] $end

$scope module PC $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 .$ pc_in [31] $end
$var wire 1 /$ pc_in [30] $end
$var wire 1 0$ pc_in [29] $end
$var wire 1 1$ pc_in [28] $end
$var wire 1 2$ pc_in [27] $end
$var wire 1 3$ pc_in [26] $end
$var wire 1 4$ pc_in [25] $end
$var wire 1 5$ pc_in [24] $end
$var wire 1 6$ pc_in [23] $end
$var wire 1 7$ pc_in [22] $end
$var wire 1 8$ pc_in [21] $end
$var wire 1 9$ pc_in [20] $end
$var wire 1 :$ pc_in [19] $end
$var wire 1 ;$ pc_in [18] $end
$var wire 1 <$ pc_in [17] $end
$var wire 1 =$ pc_in [16] $end
$var wire 1 >$ pc_in [15] $end
$var wire 1 ?$ pc_in [14] $end
$var wire 1 @$ pc_in [13] $end
$var wire 1 A$ pc_in [12] $end
$var wire 1 B$ pc_in [11] $end
$var wire 1 C$ pc_in [10] $end
$var wire 1 D$ pc_in [9] $end
$var wire 1 E$ pc_in [8] $end
$var wire 1 F$ pc_in [7] $end
$var wire 1 G$ pc_in [6] $end
$var wire 1 H$ pc_in [5] $end
$var wire 1 I$ pc_in [4] $end
$var wire 1 J$ pc_in [3] $end
$var wire 1 K$ pc_in [2] $end
$var wire 1 L$ pc_in [1] $end
$var wire 1 w# pc_in [0] $end
$var reg 32 M$ pc_out [31:0] $end
$upscope $end

$scope module IMEM $end
$var wire 1 h addr [31] $end
$var wire 1 i addr [30] $end
$var wire 1 j addr [29] $end
$var wire 1 k addr [28] $end
$var wire 1 l addr [27] $end
$var wire 1 m addr [26] $end
$var wire 1 n addr [25] $end
$var wire 1 o addr [24] $end
$var wire 1 p addr [23] $end
$var wire 1 q addr [22] $end
$var wire 1 r addr [21] $end
$var wire 1 s addr [20] $end
$var wire 1 t addr [19] $end
$var wire 1 u addr [18] $end
$var wire 1 v addr [17] $end
$var wire 1 w addr [16] $end
$var wire 1 x addr [15] $end
$var wire 1 y addr [14] $end
$var wire 1 z addr [13] $end
$var wire 1 { addr [12] $end
$var wire 1 | addr [11] $end
$var wire 1 } addr [10] $end
$var wire 1 ~ addr [9] $end
$var wire 1 !! addr [8] $end
$var wire 1 "! addr [7] $end
$var wire 1 #! addr [6] $end
$var wire 1 $! addr [5] $end
$var wire 1 %! addr [4] $end
$var wire 1 &! addr [3] $end
$var wire 1 '! addr [2] $end
$var wire 1 (! addr [1] $end
$var wire 1 )! addr [0] $end
$var reg 32 N$ instruction [31:0] $end
$upscope $end

$scope module REG_FILE $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 J! rs1 [4] $end
$var wire 1 K! rs1 [3] $end
$var wire 1 L! rs1 [2] $end
$var wire 1 M! rs1 [1] $end
$var wire 1 N! rs1 [0] $end
$var wire 1 O! rs2 [4] $end
$var wire 1 P! rs2 [3] $end
$var wire 1 Q! rs2 [2] $end
$var wire 1 R! rs2 [1] $end
$var wire 1 S! rs2 [0] $end
$var wire 1 T! rd [4] $end
$var wire 1 U! rd [3] $end
$var wire 1 V! rd [2] $end
$var wire 1 W! rd [1] $end
$var wire 1 X! rd [0] $end
$var wire 1 W# wr_data [31] $end
$var wire 1 X# wr_data [30] $end
$var wire 1 Y# wr_data [29] $end
$var wire 1 Z# wr_data [28] $end
$var wire 1 [# wr_data [27] $end
$var wire 1 \# wr_data [26] $end
$var wire 1 ]# wr_data [25] $end
$var wire 1 ^# wr_data [24] $end
$var wire 1 _# wr_data [23] $end
$var wire 1 `# wr_data [22] $end
$var wire 1 a# wr_data [21] $end
$var wire 1 b# wr_data [20] $end
$var wire 1 c# wr_data [19] $end
$var wire 1 d# wr_data [18] $end
$var wire 1 e# wr_data [17] $end
$var wire 1 f# wr_data [16] $end
$var wire 1 g# wr_data [15] $end
$var wire 1 h# wr_data [14] $end
$var wire 1 i# wr_data [13] $end
$var wire 1 j# wr_data [12] $end
$var wire 1 k# wr_data [11] $end
$var wire 1 l# wr_data [10] $end
$var wire 1 m# wr_data [9] $end
$var wire 1 n# wr_data [8] $end
$var wire 1 o# wr_data [7] $end
$var wire 1 p# wr_data [6] $end
$var wire 1 q# wr_data [5] $end
$var wire 1 r# wr_data [4] $end
$var wire 1 s# wr_data [3] $end
$var wire 1 t# wr_data [2] $end
$var wire 1 u# wr_data [1] $end
$var wire 1 v# wr_data [0] $end
$var wire 1 l" wr_en $end
$var wire 1 Y! rd1 [31] $end
$var wire 1 Z! rd1 [30] $end
$var wire 1 [! rd1 [29] $end
$var wire 1 \! rd1 [28] $end
$var wire 1 ]! rd1 [27] $end
$var wire 1 ^! rd1 [26] $end
$var wire 1 _! rd1 [25] $end
$var wire 1 `! rd1 [24] $end
$var wire 1 a! rd1 [23] $end
$var wire 1 b! rd1 [22] $end
$var wire 1 c! rd1 [21] $end
$var wire 1 d! rd1 [20] $end
$var wire 1 e! rd1 [19] $end
$var wire 1 f! rd1 [18] $end
$var wire 1 g! rd1 [17] $end
$var wire 1 h! rd1 [16] $end
$var wire 1 i! rd1 [15] $end
$var wire 1 j! rd1 [14] $end
$var wire 1 k! rd1 [13] $end
$var wire 1 l! rd1 [12] $end
$var wire 1 m! rd1 [11] $end
$var wire 1 n! rd1 [10] $end
$var wire 1 o! rd1 [9] $end
$var wire 1 p! rd1 [8] $end
$var wire 1 q! rd1 [7] $end
$var wire 1 r! rd1 [6] $end
$var wire 1 s! rd1 [5] $end
$var wire 1 t! rd1 [4] $end
$var wire 1 u! rd1 [3] $end
$var wire 1 v! rd1 [2] $end
$var wire 1 w! rd1 [1] $end
$var wire 1 x! rd1 [0] $end
$var wire 1 y! rd2 [31] $end
$var wire 1 z! rd2 [30] $end
$var wire 1 {! rd2 [29] $end
$var wire 1 |! rd2 [28] $end
$var wire 1 }! rd2 [27] $end
$var wire 1 ~! rd2 [26] $end
$var wire 1 !" rd2 [25] $end
$var wire 1 "" rd2 [24] $end
$var wire 1 #" rd2 [23] $end
$var wire 1 $" rd2 [22] $end
$var wire 1 %" rd2 [21] $end
$var wire 1 &" rd2 [20] $end
$var wire 1 '" rd2 [19] $end
$var wire 1 (" rd2 [18] $end
$var wire 1 )" rd2 [17] $end
$var wire 1 *" rd2 [16] $end
$var wire 1 +" rd2 [15] $end
$var wire 1 ," rd2 [14] $end
$var wire 1 -" rd2 [13] $end
$var wire 1 ." rd2 [12] $end
$var wire 1 /" rd2 [11] $end
$var wire 1 0" rd2 [10] $end
$var wire 1 1" rd2 [9] $end
$var wire 1 2" rd2 [8] $end
$var wire 1 3" rd2 [7] $end
$var wire 1 4" rd2 [6] $end
$var wire 1 5" rd2 [5] $end
$var wire 1 6" rd2 [4] $end
$var wire 1 7" rd2 [3] $end
$var wire 1 8" rd2 [2] $end
$var wire 1 9" rd2 [1] $end
$var wire 1 :" rd2 [0] $end
$var integer 32 O$ i $end
$upscope $end

$scope module IMM_GEN $end
$var wire 1 *! instruction [31] $end
$var wire 1 +! instruction [30] $end
$var wire 1 ,! instruction [29] $end
$var wire 1 -! instruction [28] $end
$var wire 1 .! instruction [27] $end
$var wire 1 /! instruction [26] $end
$var wire 1 0! instruction [25] $end
$var wire 1 1! instruction [24] $end
$var wire 1 2! instruction [23] $end
$var wire 1 3! instruction [22] $end
$var wire 1 4! instruction [21] $end
$var wire 1 5! instruction [20] $end
$var wire 1 6! instruction [19] $end
$var wire 1 7! instruction [18] $end
$var wire 1 8! instruction [17] $end
$var wire 1 9! instruction [16] $end
$var wire 1 :! instruction [15] $end
$var wire 1 ;! instruction [14] $end
$var wire 1 <! instruction [13] $end
$var wire 1 =! instruction [12] $end
$var wire 1 >! instruction [11] $end
$var wire 1 ?! instruction [10] $end
$var wire 1 @! instruction [9] $end
$var wire 1 A! instruction [8] $end
$var wire 1 B! instruction [7] $end
$var wire 1 C! instruction [6] $end
$var wire 1 D! instruction [5] $end
$var wire 1 E! instruction [4] $end
$var wire 1 F! instruction [3] $end
$var wire 1 G! instruction [2] $end
$var wire 1 H! instruction [1] $end
$var wire 1 I! instruction [0] $end
$var reg 32 P$ imm [31:0] $end
$var wire 1 Q$ opcode [6] $end
$var wire 1 R$ opcode [5] $end
$var wire 1 S$ opcode [4] $end
$var wire 1 T$ opcode [3] $end
$var wire 1 U$ opcode [2] $end
$var wire 1 V$ opcode [1] $end
$var wire 1 W$ opcode [0] $end
$upscope $end

$scope module CONTROL $end
$var parameter 7 X$ OPCODE_R $end
$var parameter 7 Y$ OPCODE_I $end
$var wire 1 [" opcode [6] $end
$var wire 1 \" opcode [5] $end
$var wire 1 ]" opcode [4] $end
$var wire 1 ^" opcode [3] $end
$var wire 1 _" opcode [2] $end
$var wire 1 `" opcode [1] $end
$var wire 1 a" opcode [0] $end
$var wire 1 b" funct3 [2] $end
$var wire 1 c" funct3 [1] $end
$var wire 1 d" funct3 [0] $end
$var wire 1 e" funct7 [6] $end
$var wire 1 f" funct7 [5] $end
$var wire 1 g" funct7 [4] $end
$var wire 1 h" funct7 [3] $end
$var wire 1 i" funct7 [2] $end
$var wire 1 j" funct7 [1] $end
$var wire 1 k" funct7 [0] $end
$var reg 1 Z$ branch $end
$var reg 1 [$ mem_read $end
$var reg 1 \$ mem_to_reg $end
$var reg 2 ]$ alu_op [1:0] $end
$var reg 1 ^$ mem_write $end
$var reg 1 _$ alu_src $end
$var reg 1 `$ reg_write $end
$upscope $end

$scope module ALU_SRC_MUX $end
$var parameter 32 a$ WIDTH $end
$var wire 1 y! in0 [31] $end
$var wire 1 z! in0 [30] $end
$var wire 1 {! in0 [29] $end
$var wire 1 |! in0 [28] $end
$var wire 1 }! in0 [27] $end
$var wire 1 ~! in0 [26] $end
$var wire 1 !" in0 [25] $end
$var wire 1 "" in0 [24] $end
$var wire 1 #" in0 [23] $end
$var wire 1 $" in0 [22] $end
$var wire 1 %" in0 [21] $end
$var wire 1 &" in0 [20] $end
$var wire 1 '" in0 [19] $end
$var wire 1 (" in0 [18] $end
$var wire 1 )" in0 [17] $end
$var wire 1 *" in0 [16] $end
$var wire 1 +" in0 [15] $end
$var wire 1 ," in0 [14] $end
$var wire 1 -" in0 [13] $end
$var wire 1 ." in0 [12] $end
$var wire 1 /" in0 [11] $end
$var wire 1 0" in0 [10] $end
$var wire 1 1" in0 [9] $end
$var wire 1 2" in0 [8] $end
$var wire 1 3" in0 [7] $end
$var wire 1 4" in0 [6] $end
$var wire 1 5" in0 [5] $end
$var wire 1 6" in0 [4] $end
$var wire 1 7" in0 [3] $end
$var wire 1 8" in0 [2] $end
$var wire 1 9" in0 [1] $end
$var wire 1 :" in0 [0] $end
$var wire 1 ;" in1 [31] $end
$var wire 1 <" in1 [30] $end
$var wire 1 =" in1 [29] $end
$var wire 1 >" in1 [28] $end
$var wire 1 ?" in1 [27] $end
$var wire 1 @" in1 [26] $end
$var wire 1 A" in1 [25] $end
$var wire 1 B" in1 [24] $end
$var wire 1 C" in1 [23] $end
$var wire 1 D" in1 [22] $end
$var wire 1 E" in1 [21] $end
$var wire 1 F" in1 [20] $end
$var wire 1 G" in1 [19] $end
$var wire 1 H" in1 [18] $end
$var wire 1 I" in1 [17] $end
$var wire 1 J" in1 [16] $end
$var wire 1 K" in1 [15] $end
$var wire 1 L" in1 [14] $end
$var wire 1 M" in1 [13] $end
$var wire 1 N" in1 [12] $end
$var wire 1 O" in1 [11] $end
$var wire 1 P" in1 [10] $end
$var wire 1 Q" in1 [9] $end
$var wire 1 R" in1 [8] $end
$var wire 1 S" in1 [7] $end
$var wire 1 T" in1 [6] $end
$var wire 1 U" in1 [5] $end
$var wire 1 V" in1 [4] $end
$var wire 1 W" in1 [3] $end
$var wire 1 X" in1 [2] $end
$var wire 1 Y" in1 [1] $end
$var wire 1 Z" in1 [0] $end
$var wire 1 m" sel $end
$var wire 1 t" out [31] $end
$var wire 1 u" out [30] $end
$var wire 1 v" out [29] $end
$var wire 1 w" out [28] $end
$var wire 1 x" out [27] $end
$var wire 1 y" out [26] $end
$var wire 1 z" out [25] $end
$var wire 1 {" out [24] $end
$var wire 1 |" out [23] $end
$var wire 1 }" out [22] $end
$var wire 1 ~" out [21] $end
$var wire 1 !# out [20] $end
$var wire 1 "# out [19] $end
$var wire 1 ## out [18] $end
$var wire 1 $# out [17] $end
$var wire 1 %# out [16] $end
$var wire 1 &# out [15] $end
$var wire 1 '# out [14] $end
$var wire 1 (# out [13] $end
$var wire 1 )# out [12] $end
$var wire 1 *# out [11] $end
$var wire 1 +# out [10] $end
$var wire 1 ,# out [9] $end
$var wire 1 -# out [8] $end
$var wire 1 .# out [7] $end
$var wire 1 /# out [6] $end
$var wire 1 0# out [5] $end
$var wire 1 1# out [4] $end
$var wire 1 2# out [3] $end
$var wire 1 3# out [2] $end
$var wire 1 4# out [1] $end
$var wire 1 5# out [0] $end
$upscope $end

$scope module ALU_CTRL $end
$var wire 1 n" alu_op [1] $end
$var wire 1 o" alu_op [0] $end
$var wire 1 b" funct3 [2] $end
$var wire 1 c" funct3 [1] $end
$var wire 1 d" funct3 [0] $end
$var wire 1 e" funct7 [6] $end
$var wire 1 f" funct7 [5] $end
$var wire 1 g" funct7 [4] $end
$var wire 1 h" funct7 [3] $end
$var wire 1 i" funct7 [2] $end
$var wire 1 j" funct7 [1] $end
$var wire 1 k" funct7 [0] $end
$var reg 4 b$ alu_control [3:0] $end
$upscope $end

$scope module ALU_UNIT $end
$var wire 1 Y! operand_a [31] $end
$var wire 1 Z! operand_a [30] $end
$var wire 1 [! operand_a [29] $end
$var wire 1 \! operand_a [28] $end
$var wire 1 ]! operand_a [27] $end
$var wire 1 ^! operand_a [26] $end
$var wire 1 _! operand_a [25] $end
$var wire 1 `! operand_a [24] $end
$var wire 1 a! operand_a [23] $end
$var wire 1 b! operand_a [22] $end
$var wire 1 c! operand_a [21] $end
$var wire 1 d! operand_a [20] $end
$var wire 1 e! operand_a [19] $end
$var wire 1 f! operand_a [18] $end
$var wire 1 g! operand_a [17] $end
$var wire 1 h! operand_a [16] $end
$var wire 1 i! operand_a [15] $end
$var wire 1 j! operand_a [14] $end
$var wire 1 k! operand_a [13] $end
$var wire 1 l! operand_a [12] $end
$var wire 1 m! operand_a [11] $end
$var wire 1 n! operand_a [10] $end
$var wire 1 o! operand_a [9] $end
$var wire 1 p! operand_a [8] $end
$var wire 1 q! operand_a [7] $end
$var wire 1 r! operand_a [6] $end
$var wire 1 s! operand_a [5] $end
$var wire 1 t! operand_a [4] $end
$var wire 1 u! operand_a [3] $end
$var wire 1 v! operand_a [2] $end
$var wire 1 w! operand_a [1] $end
$var wire 1 x! operand_a [0] $end
$var wire 1 t" operand_b [31] $end
$var wire 1 u" operand_b [30] $end
$var wire 1 v" operand_b [29] $end
$var wire 1 w" operand_b [28] $end
$var wire 1 x" operand_b [27] $end
$var wire 1 y" operand_b [26] $end
$var wire 1 z" operand_b [25] $end
$var wire 1 {" operand_b [24] $end
$var wire 1 |" operand_b [23] $end
$var wire 1 }" operand_b [22] $end
$var wire 1 ~" operand_b [21] $end
$var wire 1 !# operand_b [20] $end
$var wire 1 "# operand_b [19] $end
$var wire 1 ## operand_b [18] $end
$var wire 1 $# operand_b [17] $end
$var wire 1 %# operand_b [16] $end
$var wire 1 &# operand_b [15] $end
$var wire 1 '# operand_b [14] $end
$var wire 1 (# operand_b [13] $end
$var wire 1 )# operand_b [12] $end
$var wire 1 *# operand_b [11] $end
$var wire 1 +# operand_b [10] $end
$var wire 1 ,# operand_b [9] $end
$var wire 1 -# operand_b [8] $end
$var wire 1 .# operand_b [7] $end
$var wire 1 /# operand_b [6] $end
$var wire 1 0# operand_b [5] $end
$var wire 1 1# operand_b [4] $end
$var wire 1 2# operand_b [3] $end
$var wire 1 3# operand_b [2] $end
$var wire 1 4# operand_b [1] $end
$var wire 1 5# operand_b [0] $end
$var wire 1 p" alu_control [3] $end
$var wire 1 q" alu_control [2] $end
$var wire 1 r" alu_control [1] $end
$var wire 1 s" alu_control [0] $end
$var reg 32 c$ result [31:0] $end
$var wire 1 V# zero $end
$upscope $end

$scope module result4 $end
$var wire 1 *$ hex_in [3] $end
$var wire 1 +$ hex_in [2] $end
$var wire 1 ,$ hex_in [1] $end
$var wire 1 -$ hex_in [0] $end
$var reg 7 d$ segments [6:0] $end
$upscope $end

$scope module result3 $end
$var wire 1 &$ hex_in [3] $end
$var wire 1 '$ hex_in [2] $end
$var wire 1 ($ hex_in [1] $end
$var wire 1 )$ hex_in [0] $end
$var reg 7 e$ segments [6:0] $end
$upscope $end

$scope module result2 $end
$var wire 1 "$ hex_in [3] $end
$var wire 1 #$ hex_in [2] $end
$var wire 1 $$ hex_in [1] $end
$var wire 1 %$ hex_in [0] $end
$var reg 7 f$ segments [6:0] $end
$upscope $end

$scope module result1 $end
$var wire 1 |# hex_in [3] $end
$var wire 1 }# hex_in [2] $end
$var wire 1 ~# hex_in [1] $end
$var wire 1 !$ hex_in [0] $end
$var reg 7 g$ segments [6:0] $end
$upscope $end

$scope module result0 $end
$var wire 1 x# hex_in [3] $end
$var wire 1 y# hex_in [2] $end
$var wire 1 z# hex_in [1] $end
$var wire 1 {# hex_in [0] $end
$var reg 7 h$ segments [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b0 M$
b101000000000000010010011 N$
b1010 P$
0Z$
0[$
0\$
b0 ]$
0^$
1_$
1`$
b0 b$
b1010 c$
b1000000 d$
b1000000 e$
b1000000 f$
b1000000 g$
b1000 h$
b110011 X$
b10011 Y$
b100000 a$
b100000 O$
0B
1A
0@
1?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0I
0H
0G
1F
0E
0D
0C
0P
0O
0N
0M
0L
0K
1J
0W
0V
0U
0T
0S
0R
1Q
0^
0]
0\
0[
0Z
0Y
1X
0e
0d
0c
0b
0a
0`
1_
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
1I!
1H!
0G!
0F!
1E!
0D!
0C!
1B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
14!
03!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0N!
0M!
0L!
0K!
0J!
0S!
1R!
0Q!
1P!
0O!
1X!
0W!
0V!
0U!
0T!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0Z"
1Y"
0X"
1W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
1a"
1`"
0_"
0^"
1]"
0\"
0["
0d"
0c"
0b"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
1l"
1m"
0o"
0n"
0s"
0r"
0q"
0p"
05#
14#
03#
12#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0U#
1T#
0S#
1R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
0V#
0v#
1u#
0t#
1s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0w#
1W$
1V$
0U$
0T$
1S$
0R$
0Q$
0{#
1z#
0y#
1x#
0!$
0~#
0}#
0|#
0%$
0$$
0#$
0"$
0)$
0($
0'$
0&$
0-$
0,$
0+$
0*$
0f
0g
zL$
zK$
zJ$
zI$
zH$
zG$
zF$
zE$
zD$
zC$
zB$
zA$
z@$
z?$
z>$
z=$
z<$
z;$
z:$
z9$
z8$
z7$
z6$
z5$
z4$
z3$
z2$
z1$
z0$
z/$
z.$
$end
#5
1!
1f
b0 O$
b1 O$
b10 O$
b11 O$
b100 O$
b101 O$
b110 O$
b111 O$
b1000 O$
b1001 O$
b1010 O$
b1011 O$
b1100 O$
b1101 O$
b1110 O$
b1111 O$
b10000 O$
b10001 O$
b10010 O$
b10011 O$
b10100 O$
b10101 O$
b10110 O$
b10111 O$
b11000 O$
b11001 O$
b11010 O$
b11011 O$
b11100 O$
b11101 O$
b11110 O$
b11111 O$
b100000 O$
#10
0!
0f
#15
1!
1f
b0 O$
b1 O$
b10 O$
b11 O$
b100 O$
b101 O$
b110 O$
b111 O$
b1000 O$
b1001 O$
b1010 O$
b1011 O$
b1100 O$
b1101 O$
b1110 O$
b1111 O$
b10000 O$
b10001 O$
b10010 O$
b10011 O$
b10100 O$
b10101 O$
b10110 O$
b10111 O$
b11000 O$
b11001 O$
b11010 O$
b11011 O$
b11100 O$
b11101 O$
b1111