$date
	Fri Oct 17 13:37:45 2025
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module TB_Riscv_CPU $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var wire 1 # hex0 [6] $end
$var wire 1 $ hex0 [5] $end
$var wire 1 % hex0 [4] $end
$var wire 1 & hex0 [3] $end
$var wire 1 ' hex0 [2] $end
$var wire 1 ( hex0 [1] $end
$var wire 1 ) hex0 [0] $end
$var wire 1 * hex1 [6] $end
$var wire 1 + hex1 [5] $end
$var wire 1 , hex1 [4] $end
$var wire 1 - hex1 [3] $end
$var wire 1 . hex1 [2] $end
$var wire 1 / hex1 [1] $end
$var wire 1 0 hex1 [0] $end
$var wire 1 1 hex2 [6] $end
$var wire 1 2 hex2 [5] $end
$var wire 1 3 hex2 [4] $end
$var wire 1 4 hex2 [3] $end
$var wire 1 5 hex2 [2] $end
$var wire 1 6 hex2 [1] $end
$var wire 1 7 hex2 [0] $end
$var wire 1 8 hex3 [6] $end
$var wire 1 9 hex3 [5] $end
$var wire 1 : hex3 [4] $end
$var wire 1 ; hex3 [3] $end
$var wire 1 < hex3 [2] $end
$var wire 1 = hex3 [1] $end
$var wire 1 > hex3 [0] $end
$var wire 1 ? hex4 [6] $end
$var wire 1 @ hex4 [5] $end
$var wire 1 A hex4 [4] $end
$var wire 1 B hex4 [3] $end
$var wire 1 C hex4 [2] $end
$var wire 1 D hex4 [1] $end
$var wire 1 E hex4 [0] $end

$scope module DUT $end
$var wire 1 F clk $end
$var wire 1 G rst $end
$var wire 1 # hex0 [6] $end
$var wire 1 $ hex0 [5] $end
$var wire 1 % hex0 [4] $end
$var wire 1 & hex0 [3] $end
$var wire 1 ' hex0 [2] $end
$var wire 1 ( hex0 [1] $end
$var wire 1 ) hex0 [0] $end
$var wire 1 * hex1 [6] $end
$var wire 1 + hex1 [5] $end
$var wire 1 , hex1 [4] $end
$var wire 1 - hex1 [3] $end
$var wire 1 . hex1 [2] $end
$var wire 1 / hex1 [1] $end
$var wire 1 0 hex1 [0] $end
$var wire 1 1 hex2 [6] $end
$var wire 1 2 hex2 [5] $end
$var wire 1 3 hex2 [4] $end
$var wire 1 4 hex2 [3] $end
$var wire 1 5 hex2 [2] $end
$var wire 1 6 hex2 [1] $end
$var wire 1 7 hex2 [0] $end
$var wire 1 8 hex3 [6] $end
$var wire 1 9 hex3 [5] $end
$var wire 1 : hex3 [4] $end
$var wire 1 ; hex3 [3] $end
$var wire 1 < hex3 [2] $end
$var wire 1 = hex3 [1] $end
$var wire 1 > hex3 [0] $end
$var wire 1 ? hex4 [6] $end
$var wire 1 @ hex4 [5] $end
$var wire 1 A hex4 [4] $end
$var wire 1 B hex4 [3] $end
$var wire 1 C hex4 [2] $end
$var wire 1 D hex4 [1] $end
$var wire 1 E hex4 [0] $end
$var wire 1 H pc_out [31] $end
$var wire 1 I pc_out [30] $end
$var wire 1 J pc_out [29] $end
$var wire 1 K pc_out [28] $end
$var wire 1 L pc_out [27] $end
$var wire 1 M pc_out [26] $end
$var wire 1 N pc_out [25] $end
$var wire 1 O pc_out [24] $end
$var wire 1 P pc_out [23] $end
$var wire 1 Q pc_out [22] $end
$var wire 1 R pc_out [21] $end
$var wire 1 S pc_out [20] $end
$var wire 1 T pc_out [19] $end
$var wire 1 U pc_out [18] $end
$var wire 1 V pc_out [17] $end
$var wire 1 W pc_out [16] $end
$var wire 1 X pc_out [15] $end
$var wire 1 Y pc_out [14] $end
$var wire 1 Z pc_out [13] $end
$var wire 1 [ pc_out [12] $end
$var wire 1 \ pc_out [11] $end
$var wire 1 ] pc_out [10] $end
$var wire 1 ^ pc_out [9] $end
$var wire 1 _ pc_out [8] $end
$var wire 1 ` pc_out [7] $end
$var wire 1 a pc_out [6] $end
$var wire 1 b pc_out [5] $end
$var wire 1 c pc_out [4] $end
$var wire 1 d pc_out [3] $end
$var wire 1 e pc_out [2] $end
$var wire 1 f pc_out [1] $end
$var wire 1 g pc_out [0] $end
$var wire 1 h instruction [31] $end
$var wire 1 i instruction [30] $end
$var wire 1 j instruction [29] $end
$var wire 1 k instruction [28] $end
$var wire 1 l instruction [27] $end
$var wire 1 m instruction [26] $end
$var wire 1 n instruction [25] $end
$var wire 1 o instruction [24] $end
$var wire 1 p instruction [23] $end
$var wire 1 q instruction [22] $end
$var wire 1 r instruction [21] $end
$var wire 1 s instruction [20] $end
$var wire 1 t instruction [19] $end
$var wire 1 u instruction [18] $end
$var wire 1 v instruction [17] $end
$var wire 1 w instruction [16] $end
$var wire 1 x instruction [15] $end
$var wire 1 y instruction [14] $end
$var wire 1 z instruction [13] $end
$var wire 1 { instruction [12] $end
$var wire 1 | instruction [11] $end
$var wire 1 } instruction [10] $end
$var wire 1 ~ instruction [9] $end
$var wire 1 !! instruction [8] $end
$var wire 1 "! instruction [7] $end
$var wire 1 #! instruction [6] $end
$var wire 1 $! instruction [5] $end
$var wire 1 %! instruction [4] $end
$var wire 1 &! instruction [3] $end
$var wire 1 '! instruction [2] $end
$var wire 1 (! instruction [1] $end
$var wire 1 )! instruction [0] $end
$var wire 1 *! rs1 [4] $end
$var wire 1 +! rs1 [3] $end
$var wire 1 ,! rs1 [2] $end
$var wire 1 -! rs1 [1] $end
$var wire 1 .! rs1 [0] $end
$var wire 1 /! rs2 [4] $end
$var wire 1 0! rs2 [3] $end
$var wire 1 1! rs2 [2] $end
$var wire 1 2! rs2 [1] $end
$var wire 1 3! rs2 [0] $end
$var wire 1 4! rd [4] $end
$var wire 1 5! rd [3] $end
$var wire 1 6! rd [2] $end
$var wire 1 7! rd [1] $end
$var wire 1 8! rd [0] $end
$var wire 1 9! rd1_data [31] $end
$var wire 1 :! rd1_data [30] $end
$var wire 1 ;! rd1_data [29] $end
$var wire 1 <! rd1_data [28] $end
$var wire 1 =! rd1_data [27] $end
$var wire 1 >! rd1_data [26] $end
$var wire 1 ?! rd1_data [25] $end
$var wire 1 @! rd1_data [24] $end
$var wire 1 A! rd1_data [23] $end
$var wire 1 B! rd1_data [22] $end
$var wire 1 C! rd1_data [21] $end
$var wire 1 D! rd1_data [20] $end
$var wire 1 E! rd1_data [19] $end
$var wire 1 F! rd1_data [18] $end
$var wire 1 G! rd1_data [17] $end
$var wire 1 H! rd1_data [16] $end
$var wire 1 I! rd1_data [15] $end
$var wire 1 J! rd1_data [14] $end
$var wire 1 K! rd1_data [13] $end
$var wire 1 L! rd1_data [12] $end
$var wire 1 M! rd1_data [11] $end
$var wire 1 N! rd1_data [10] $end
$var wire 1 O! rd1_data [9] $end
$var wire 1 P! rd1_data [8] $end
$var wire 1 Q! rd1_data [7] $end
$var wire 1 R! rd1_data [6] $end
$var wire 1 S! rd1_data [5] $end
$var wire 1 T! rd1_data [4] $end
$var wire 1 U! rd1_data [3] $end
$var wire 1 V! rd1_data [2] $end
$var wire 1 W! rd1_data [1] $end
$var wire 1 X! rd1_data [0] $end
$var wire 1 Y! rd2_data [31] $end
$var wire 1 Z! rd2_data [30] $end
$var wire 1 [! rd2_data [29] $end
$var wire 1 \! rd2_data [28] $end
$var wire 1 ]! rd2_data [27] $end
$var wire 1 ^! rd2_data [26] $end
$var wire 1 _! rd2_data [25] $end
$var wire 1 `! rd2_data [24] $end
$var wire 1 a! rd2_data [23] $end
$var wire 1 b! rd2_data [22] $end
$var wire 1 c! rd2_data [21] $end
$var wire 1 d! rd2_data [20] $end
$var wire 1 e! rd2_data [19] $end
$var wire 1 f! rd2_data [18] $end
$var wire 1 g! rd2_data [17] $end
$var wire 1 h! rd2_data [16] $end
$var wire 1 i! rd2_data [15] $end
$var wire 1 j! rd2_data [14] $end
$var wire 1 k! rd2_data [13] $end
$var wire 1 l! rd2_data [12] $end
$var wire 1 m! rd2_data [11] $end
$var wire 1 n! rd2_data [10] $end
$var wire 1 o! rd2_data [9] $end
$var wire 1 p! rd2_data [8] $end
$var wire 1 q! rd2_data [7] $end
$var wire 1 r! rd2_data [6] $end
$var wire 1 s! rd2_data [5] $end
$var wire 1 t! rd2_data [4] $end
$var wire 1 u! rd2_data [3] $end
$var wire 1 v! rd2_data [2] $end
$var wire 1 w! rd2_data [1] $end
$var wire 1 x! rd2_data [0] $end
$var wire 1 y! immediate [31] $end
$var wire 1 z! immediate [30] $end
$var wire 1 {! immediate [29] $end
$var wire 1 |! immediate [28] $end
$var wire 1 }! immediate [27] $end
$var wire 1 ~! immediate [26] $end
$var wire 1 !" immediate [25] $end
$var wire 1 "" immediate [24] $end
$var wire 1 #" immediate [23] $end
$var wire 1 $" immediate [22] $end
$var wire 1 %" immediate [21] $end
$var wire 1 &" immediate [20] $end
$var wire 1 '" immediate [19] $end
$var wire 1 (" immediate [18] $end
$var wire 1 )" immediate [17] $end
$var wire 1 *" immediate [16] $end
$var wire 1 +" immediate [15] $end
$var wire 1 ," immediate [14] $end
$var wire 1 -" immediate [13] $end
$var wire 1 ." immediate [12] $end
$var wire 1 /" immediate [11] $end
$var wire 1 0" immediate [10] $end
$var wire 1 1" immediate [9] $end
$var wire 1 2" immediate [8] $end
$var wire 1 3" immediate [7] $end
$var wire 1 4" immediate [6] $end
$var wire 1 5" immediate [5] $end
$var wire 1 6" immediate [4] $end
$var wire 1 7" immediate [3] $end
$var wire 1 8" immediate [2] $end
$var wire 1 9" immediate [1] $end
$var wire 1 :" immediate [0] $end
$var wire 1 ;" opcode [6] $end
$var wire 1 <" opcode [5] $end
$var wire 1 =" opcode [4] $end
$var wire 1 >" opcode [3] $end
$var wire 1 ?" opcode [2] $end
$var wire 1 @" opcode [1] $end
$var wire 1 A" opcode [0] $end
$var wire 1 B" funct3 [2] $end
$var wire 1 C" funct3 [1] $end
$var wire 1 D" funct3 [0] $end
$var wire 1 E" funct7 [6] $end
$var wire 1 F" funct7 [5] $end
$var wire 1 G" funct7 [4] $end
$var wire 1 H" funct7 [3] $end
$var wire 1 I" funct7 [2] $end
$var wire 1 J" funct7 [1] $end
$var wire 1 K" funct7 [0] $end
$var wire 1 L" reg_write $end
$var wire 1 M" alu_src $end
$var wire 1 N" alu_op [1] $end
$var wire 1 O" alu_op [0] $end
$var wire 1 P" alu_control [3] $end
$var wire 1 Q" alu_control [2] $end
$var wire 1 R" alu_control [1] $end
$var wire 1 S" alu_control [0] $end
$var wire 1 T" alu_operand_b [31] $end
$var wire 1 U" alu_operand_b [30] $end
$var wire 1 V" alu_operand_b [29] $end
$var wire 1 W" alu_operand_b [28] $end
$var wire 1 X" alu_operand_b [27] $end
$var wire 1 Y" alu_operand_b [26] $end
$var wire 1 Z" alu_operand_b [25] $end
$var wire 1 [" alu_operand_b [24] $end
$var wire 1 \" alu_operand_b [23] $end
$var wire 1 ]" alu_operand_b [22] $end
$var wire 1 ^" alu_operand_b [21] $end
$var wire 1 _" alu_operand_b [20] $end
$var wire 1 `" alu_operand_b [19] $end
$var wire 1 a" alu_operand_b [18] $end
$var wire 1 b" alu_operand_b [17] $end
$var wire 1 c" alu_operand_b [16] $end
$var wire 1 d" alu_operand_b [15] $end
$var wire 1 e" alu_operand_b [14] $end
$var wire 1 f" alu_operand_b [13] $end
$var wire 1 g" alu_operand_b [12] $end
$var wire 1 h" alu_operand_b [11] $end
$var wire 1 i" alu_operand_b [10] $end
$var wire 1 j" alu_operand_b [9] $end
$var wire 1 k" alu_operand_b [8] $end
$var wire 1 l" alu_operand_b [7] $end
$var wire 1 m" alu_operand_b [6] $end
$var wire 1 n" alu_operand_b [5] $end
$var wire 1 o" alu_operand_b [4] $end
$var wire 1 p" alu_operand_b [3] $end
$var wire 1 q" alu_operand_b [2] $end
$var wire 1 r" alu_operand_b [1] $end
$var wire 1 s" alu_operand_b [0] $end
$var wire 1 t" alu_result [31] $end
$var wire 1 u" alu_result [30] $end
$var wire 1 v" alu_result [29] $end
$var wire 1 w" alu_result [28] $end
$var wire 1 x" alu_result [27] $end
$var wire 1 y" alu_result [26] $end
$var wire 1 z" alu_result [25] $end
$var wire 1 {" alu_result [24] $end
$var wire 1 |" alu_result [23] $end
$var wire 1 }" alu_result [22] $end
$var wire 1 ~" alu_result [21] $end
$var wire 1 !# alu_result [20] $end
$var wire 1 "# alu_result [19] $end
$var wire 1 ## alu_result [18] $end
$var wire 1 $# alu_result [17] $end
$var wire 1 %# alu_result [16] $end
$var wire 1 &# alu_result [15] $end
$var wire 1 '# alu_result [14] $end
$var wire 1 (# alu_result [13] $end
$var wire 1 )# alu_result [12] $end
$var wire 1 *# alu_result [11] $end
$var wire 1 +# alu_result [10] $end
$var wire 1 ,# alu_result [9] $end
$var wire 1 -# alu_result [8] $end
$var wire 1 .# alu_result [7] $end
$var wire 1 /# alu_result [6] $end
$var wire 1 0# alu_result [5] $end
$var wire 1 1# alu_result [4] $end
$var wire 1 2# alu_result [3] $end
$var wire 1 3# alu_result [2] $end
$var wire 1 4# alu_result [1] $end
$var wire 1 5# alu_result [0] $end
$var wire 1 6# alu_zero $end
$var wire 1 7# write_back_data [31] $end
$var wire 1 8# write_back_data [30] $end
$var wire 1 9# write_back_data [29] $end
$var wire 1 :# write_back_data [28] $end
$var wire 1 ;# write_back_data [27] $end
$var wire 1 <# write_back_data [26] $end
$var wire 1 =# write_back_data [25] $end
$var wire 1 ># write_back_data [24] $end
$var wire 1 ?# write_back_data [23] $end
$var wire 1 @# write_back_data [22] $end
$var wire 1 A# write_back_data [21] $end
$var wire 1 B# write_back_data [20] $end
$var wire 1 C# write_back_data [19] $end
$var wire 1 D# write_back_data [18] $end
$var wire 1 E# write_back_data [17] $end
$var wire 1 F# write_back_data [16] $end
$var wire 1 G# write_back_data [15] $end
$var wire 1 H# write_back_data [14] $end
$var wire 1 I# write_back_data [13] $end
$var wire 1 J# write_back_data [12] $end
$var wire 1 K# write_back_data [11] $end
$var wire 1 L# write_back_data [10] $end
$var wire 1 M# write_back_data [9] $end
$var wire 1 N# write_back_data [8] $end
$var wire 1 O# write_back_data [7] $end
$var wire 1 P# write_back_data [6] $end
$var wire 1 Q# write_back_data [5] $end
$var wire 1 R# write_back_data [4] $end
$var wire 1 S# write_back_data [3] $end
$var wire 1 T# write_back_data [2] $end
$var wire 1 U# write_back_data [1] $end
$var wire 1 V# write_back_data [0] $end
$var wire 1 W# pc_next $end
$var wire 1 X# hex_d0 [3] $end
$var wire 1 Y# hex_d0 [2] $end
$var wire 1 Z# hex_d0 [1] $end
$var wire 1 [# hex_d0 [0] $end
$var wire 1 \# hex_d1 [3] $end
$var wire 1 ]# hex_d1 [2] $end
$var wire 1 ^# hex_d1 [1] $end
$var wire 1 _# hex_d1 [0] $end
$var wire 1 `# hex_d2 [3] $end
$var wire 1 a# hex_d2 [2] $end
$var wire 1 b# hex_d2 [1] $end
$var wire 1 c# hex_d2 [0] $end
$var wire 1 d# hex_d3 [3] $end
$var wire 1 e# hex_d3 [2] $end
$var wire 1 f# hex_d3 [1] $end
$var wire 1 g# hex_d3 [0] $end
$var wire 1 h# hex_d4 [3] $end
$var wire 1 i# hex_d4 [2] $end
$var wire 1 j# hex_d4 [1] $end
$var wire 1 k# hex_d4 [0] $end

$scope module PC $end
$var wire 1 F clk $end
$var wire 1 G rst $end
$var wire 1 l# pc_in [31] $end
$var wire 1 m# pc_in [30] $end
$var wire 1 n# pc_in [29] $end
$var wire 1 o# pc_in [28] $end
$var wire 1 p# pc_in [27] $end
$var wire 1 q# pc_in [26] $end
$var wire 1 r# pc_in [25] $end
$var wire 1 s# pc_in [24] $end
$var wire 1 t# pc_in [23] $end
$var wire 1 u# pc_in [22] $end
$var wire 1 v# pc_in [21] $end
$var wire 1 w# pc_in [20] $end
$var wire 1 x# pc_in [19] $end
$var wire 1 y# pc_in [18] $end
$var wire 1 z# pc_in [17] $end
$var wire 1 {# pc_in [16] $end
$var wire 1 |# pc_in [15] $end
$var wire 1 }# pc_in [14] $end
$var wire 1 ~# pc_in [13] $end
$var wire 1 !$ pc_in [12] $end
$var wire 1 "$ pc_in [11] $end
$var wire 1 #$ pc_in [10] $end
$var wire 1 $$ pc_in [9] $end
$var wire 1 %$ pc_in [8] $end
$var wire 1 &$ pc_in [7] $end
$var wire 1 '$ pc_in [6] $end
$var wire 1 ($ pc_in [5] $end
$var wire 1 )$ pc_in [4] $end
$var wire 1 *$ pc_in [3] $end
$var wire 1 +$ pc_in [2] $end
$var wire 1 ,$ pc_in [1] $end
$var wire 1 W# pc_in [0] $end
$var reg 32 -$ pc_out [31:0] $end
$upscope $end

$scope module IMEM $end
$var wire 1 H addr [31] $end
$var wire 1 I addr [30] $end
$var wire 1 J addr [29] $end
$var wire 1 K addr [28] $end
$var wire 1 L addr [27] $end
$var wire 1 M addr [26] $end
$var wire 1 N addr [25] $end
$var wire 1 O addr [24] $end
$var wire 1 P addr [23] $end
$var wire 1 Q addr [22] $end
$var wire 1 R addr [21] $end
$var wire 1 S addr [20] $end
$var wire 1 T addr [19] $end
$var wire 1 U addr [18] $end
$var wire 1 V addr [17] $end
$var wire 1 W addr [16] $end
$var wire 1 X addr [15] $end
$var wire 1 Y addr [14] $end
$var wire 1 Z addr [13] $end
$var wire 1 [ addr [12] $end
$var wire 1 \ addr [11] $end
$var wire 1 ] addr [10] $end
$var wire 1 ^ addr [9] $end
$var wire 1 _ addr [8] $end
$var wire 1 ` addr [7] $end
$var wire 1 a addr [6] $end
$var wire 1 b addr [5] $end
$var wire 1 c addr [4] $end
$var wire 1 d addr [3] $end
$var wire 1 e addr [2] $end
$var wire 1 f addr [1] $end
$var wire 1 g addr [0] $end
$var reg 32 .$ instruction [31:0] $end
$upscope $end

$scope module REG_FILE $end
$var wire 1 F clk $end
$var wire 1 *! rs1 [4] $end
$var wire 1 +! rs1 [3] $end
$var wire 1 ,! rs1 [2] $end
$var wire 1 -! rs1 [1] $end
$var wire 1 .! rs1 [0] $end
$var wire 1 /! rs2 [4] $end
$var wire 1 0! rs2 [3] $end
$var wire 1 1! rs2 [2] $end
$var wire 1 2! rs2 [1] $end
$var wire 1 3! rs2 [0] $end
$var wire 1 4! rd [4] $end
$var wire 1 5! rd [3] $end
$var wire 1 6! rd [2] $end
$var wire 1 7! rd [1] $end
$var wire 1 8! rd [0] $end
$var wire 1 7# wr_data [31] $end
$var wire 1 8# wr_data [30] $end
$var wire 1 9# wr_data [29] $end
$var wire 1 :# wr_data [28] $end
$var wire 1 ;# wr_data [27] $end
$var wire 1 <# wr_data [26] $end
$var wire 1 =# wr_data [25] $end
$var wire 1 ># wr_data [24] $end
$var wire 1 ?# wr_data [23] $end
$var wire 1 @# wr_data [22] $end
$var wire 1 A# wr_data [21] $end
$var wire 1 B# wr_data [20] $end
$var wire 1 C# wr_data [19] $end
$var wire 1 D# wr_data [18] $end
$var wire 1 E# wr_data [17] $end
$var wire 1 F# wr_data [16] $end
$var wire 1 G# wr_data [15] $end
$var wire 1 H# wr_data [14] $end
$var wire 1 I# wr_data [13] $end
$var wire 1 J# wr_data [12] $end
$var wire 1 K# wr_data [11] $end
$var wire 1 L# wr_data [10] $end
$var wire 1 M# wr_data [9] $end
$var wire 1 N# wr_data [8] $end
$var wire 1 O# wr_data [7] $end
$var wire 1 P# wr_data [6] $end
$var wire 1 Q# wr_data [5] $end
$var wire 1 R# wr_data [4] $end
$var wire 1 S# wr_data [3] $end
$var wire 1 T# wr_data [2] $end
$var wire 1 U# wr_data [1] $end
$var wire 1 V# wr_data [0] $end
$var wire 1 L" wr_en $end
$var wire 1 9! rd1 [31] $end
$var wire 1 :! rd1 [30] $end
$var wire 1 ;! rd1 [29] $end
$var wire 1 <! rd1 [28] $end
$var wire 1 =! rd1 [27] $end
$var wire 1 >! rd1 [26] $end
$var wire 1 ?! rd1 [25] $end
$var wire 1 @! rd1 [24] $end
$var wire 1 A! rd1 [23] $end
$var wire 1 B! rd1 [22] $end
$var wire 1 C! rd1 [21] $end
$var wire 1 D! rd1 [20] $end
$var wire 1 E! rd1 [19] $end
$var wire 1 F! rd1 [18] $end
$var wire 1 G! rd1 [17] $end
$var wire 1 H! rd1 [16] $end
$var wire 1 I! rd1 [15] $end
$var wire 1 J! rd1 [14] $end
$var wire 1 K! rd1 [13] $end
$var wire 1 L! rd1 [12] $end
$var wire 1 M! rd1 [11] $end
$var wire 1 N! rd1 [10] $end
$var wire 1 O! rd1 [9] $end
$var wire 1 P! rd1 [8] $end
$var wire 1 Q! rd1 [7] $end
$var wire 1 R! rd1 [6] $end
$var wire 1 S! rd1 [5] $end
$var wire 1 T! rd1 [4] $end
$var wire 1 U! rd1 [3] $end
$var wire 1 V! rd1 [2] $end
$var wire 1 W! rd1 [1] $end
$var wire 1 X! rd1 [0] $end
$var wire 1 Y! rd2 [31] $end
$var wire 1 Z! rd2 [30] $end
$var wire 1 [! rd2 [29] $end
$var wire 1 \! rd2 [28] $end
$var wire 1 ]! rd2 [27] $end
$var wire 1 ^! rd2 [26] $end
$var wire 1 _! rd2 [25] $end
$var wire 1 `! rd2 [24] $end
$var wire 1 a! rd2 [23] $end
$var wire 1 b! rd2 [22] $end
$var wire 1 c! rd2 [21] $end
$var wire 1 d! rd2 [20] $end
$var wire 1 e! rd2 [19] $end
$var wire 1 f! rd2 [18] $end
$var wire 1 g! rd2 [17] $end
$var wire 1 h! rd2 [16] $end
$var wire 1 i! rd2 [15] $end
$var wire 1 j! rd2 [14] $end
$var wire 1 k! rd2 [13] $end
$var wire 1 l! rd2 [12] $end
$var wire 1 m! rd2 [11] $end
$var wire 1 n! rd2 [10] $end
$var wire 1 o! rd2 [9] $end
$var wire 1 p! rd2 [8] $end
$var wire 1 q! rd2 [7] $end
$var wire 1 r! rd2 [6] $end
$var wire 1 s! rd2 [5] $end
$var wire 1 t! rd2 [4] $end
$var wire 1 u! rd2 [3] $end
$var wire 1 v! rd2 [2] $end
$var wire 1 w! rd2 [1] $end
$var wire 1 x! rd2 [0] $end
$var integer 32 /$ i $end
$upscope $end

$scope module IMM_GEN $end
$var wire 1 h instruction [31] $end
$var wire 1 i instruction [30] $end
$var wire 1 j instruction [29] $end
$var wire 1 k instruction [28] $end
$var wire 1 l instruction [27] $end
$var wire 1 m instruction [26] $end
$var wire 1 n instruction [25] $end
$var wire 1 o instruction [24] $end
$var wire 1 p instruction [23] $end
$var wire 1 q instruction [22] $end
$var wire 1 r instruction [21] $end
$var wire 1 s instruction [20] $end
$var wire 1 t instruction [19] $end
$var wire 1 u instruction [18] $end
$var wire 1 v instruction [17] $end
$var wire 1 w instruction [16] $end
$var wire 1 x instruction [15] $end
$var wire 1 y instruction [14] $end
$var wire 1 z instruction [13] $end
$var wire 1 { instruction [12] $end
$var wire 1 | instruction [11] $end
$var wire 1 } instruction [10] $end
$var wire 1 ~ instruction [9] $end
$var wire 1 !! instruction [8] $end
$var wire 1 "! instruction [7] $end
$var wire 1 #! instruction [6] $end
$var wire 1 $! instruction [5] $end
$var wire 1 %! instruction [4] $end
$var wire 1 &! instruction [3] $end
$var wire 1 '! instruction [2] $end
$var wire 1 (! instruction [1] $end
$var wire 1 )! instruction [0] $end
$var reg 32 0$ imm [31:0] $end
$var wire 1 1$ opcode [6] $end
$var wire 1 2$ opcode [5] $end
$var wire 1 3$ opcode [4] $end
$var wire 1 4$ opcode [3] $end
$var wire 1 5$ opcode [2] $end
$var wire 1 6$ opcode [1] $end
$var wire 1 7$ opcode [0] $end
$upscope $end

$scope module CONTROL $end
$var wire 1 ;" opcode [6] $end
$var wire 1 <" opcode [5] $end
$var wire 1 =" opcode [4] $end
$var wire 1 >" opcode [3] $end
$var wire 1 ?" opcode [2] $end
$var wire 1 @" opcode [1] $end
$var wire 1 A" opcode [0] $end
$var wire 1 B" funct3 [2] $end
$var wire 1 C" funct3 [1] $end
$var wire 1 D" funct3 [0] $end
$var wire 1 E" funct7 [6] $end
$var wire 1 F" funct7 [5] $end
$var wire 1 G" funct7 [4] $end
$var wire 1 H" funct7 [3] $end
$var wire 1 I" funct7 [2] $end
$var wire 1 J" funct7 [1] $end
$var wire 1 K" funct7 [0] $end
$var reg 1 8$ branch $end
$var reg 1 9$ mem_read $end
$var reg 1 :$ mem_to_reg $end
$var reg 2 ;$ alu_op [1:0] $end
$var reg 1 <$ mem_write $end
$var reg 1 =$ alu_src $end
$var reg 1 >$ reg_write $end
$upscope $end

$scope module ALU_SRC_MUX $end
$var parameter 32 ?$ WIDTH $end
$var wire 1 Y! in0 [31] $end
$var wire 1 Z! in0 [30] $end
$var wire 1 [! in0 [29] $end
$var wire 1 \! in0 [28] $end
$var wire 1 ]! in0 [27] $end
$var wire 1 ^! in0 [26] $end
$var wire 1 _! in0 [25] $end
$var wire 1 `! in0 [24] $end
$var wire 1 a! in0 [23] $end
$var wire 1 b! in0 [22] $end
$var wire 1 c! in0 [21] $end
$var wire 1 d! in0 [20] $end
$var wire 1 e! in0 [19] $end
$var wire 1 f! in0 [18] $end
$var wire 1 g! in0 [17] $end
$var wire 1 h! in0 [16] $end
$var wire 1 i! in0 [15] $end
$var wire 1 j! in0 [14] $end
$var wire 1 k! in0 [13] $end
$var wire 1 l! in0 [12] $end
$var wire 1 m! in0 [11] $end
$var wire 1 n! in0 [10] $end
$var wire 1 o! in0 [9] $end
$var wire 1 p! in0 [8] $end
$var wire 1 q! in0 [7] $end
$var wire 1 r! in0 [6] $end
$var wire 1 s! in0 [5] $end
$var wire 1 t! in0 [4] $end
$var wire 1 u! in0 [3] $end
$var wire 1 v! in0 [2] $end
$var wire 1 w! in0 [1] $end
$var wire 1 x! in0 [0] $end
$var wire 1 y! in1 [31] $end
$var wire 1 z! in1 [30] $end
$var wire 1 {! in1 [29] $end
$var wire 1 |! in1 [28] $end
$var wire 1 }! in1 [27] $end
$var wire 1 ~! in1 [26] $end
$var wire 1 !" in1 [25] $end
$var wire 1 "" in1 [24] $end
$var wire 1 #" in1 [23] $end
$var wire 1 $" in1 [22] $end
$var wire 1 %" in1 [21] $end
$var wire 1 &" in1 [20] $end
$var wire 1 '" in1 [19] $end
$var wire 1 (" in1 [18] $end
$var wire 1 )" in1 [17] $end
$var wire 1 *" in1 [16] $end
$var wire 1 +" in1 [15] $end
$var wire 1 ," in1 [14] $end
$var wire 1 -" in1 [13] $end
$var wire 1 ." in1 [12] $end
$var wire 1 /" in1 [11] $end
$var wire 1 0" in1 [10] $end
$var wire 1 1" in1 [9] $end
$var wire 1 2" in1 [8] $end
$var wire 1 3" in1 [7] $end
$var wire 1 4" in1 [6] $end
$var wire 1 5" in1 [5] $end
$var wire 1 6" in1 [4] $end
$var wire 1 7" in1 [3] $end
$var wire 1 8" in1 [2] $end
$var wire 1 9" in1 [1] $end
$var wire 1 :" in1 [0] $end
$var wire 1 M" sel $end
$var wire 1 T" out [31] $end
$var wire 1 U" out [30] $end
$var wire 1 V" out [29] $end
$var wire 1 W" out [28] $end
$var wire 1 X" out [27] $end
$var wire 1 Y" out [26] $end
$var wire 1 Z" out [25] $end
$var wire 1 [" out [24] $end
$var wire 1 \" out [23] $end
$var wire 1 ]" out [22] $end
$var wire 1 ^" out [21] $end
$var wire 1 _" out [20] $end
$var wire 1 `" out [19] $end
$var wire 1 a" out [18] $end
$var wire 1 b" out [17] $end
$var wire 1 c" out [16] $end
$var wire 1 d" out [15] $end
$var wire 1 e" out [14] $end
$var wire 1 f" out [13] $end
$var wire 1 g" out [12] $end
$var wire 1 h" out [11] $end
$var wire 1 i" out [10] $end
$var wire 1 j" out [9] $end
$var wire 1 k" out [8] $end
$var wire 1 l" out [7] $end
$var wire 1 m" out [6] $end
$var wire 1 n" out [5] $end
$var wire 1 o" out [4] $end
$var wire 1 p" out [3] $end
$var wire 1 q" out [2] $end
$var wire 1 r" out [1] $end
$var wire 1 s" out [0] $end
$upscope $end

$scope module ALU_CTRL $end
$var wire 1 N" alu_op [1] $end
$var wire 1 O" alu_op [0] $end
$var wire 1 B" funct3 [2] $end
$var wire 1 C" funct3 [1] $end
$var wire 1 D" funct3 [0] $end
$var wire 1 E" funct7 [6] $end
$var wire 1 F" funct7 [5] $end
$var wire 1 G" funct7 [4] $end
$var wire 1 H" funct7 [3] $end
$var wire 1 I" funct7 [2] $end
$var wire 1 J" funct7 [1] $end
$var wire 1 K" funct7 [0] $end
$var reg 4 @$ alu_control [3:0] $end
$upscope $end

$scope module ALU_UNIT $end
$var wire 1 9! operand_a [31] $end
$var wire 1 :! operand_a [30] $end
$var wire 1 ;! operand_a [29] $end
$var wire 1 <! operand_a [28] $end
$var wire 1 =! operand_a [27] $end
$var wire 1 >! operand_a [26] $end
$var wire 1 ?! operand_a [25] $end
$var wire 1 @! operand_a [24] $end
$var wire 1 A! operand_a [23] $end
$var wire 1 B! operand_a [22] $end
$var wire 1 C! operand_a [21] $end
$var wire 1 D! operand_a [20] $end
$var wire 1 E! operand_a [19] $end
$var wire 1 F! operand_a [18] $end
$var wire 1 G! operand_a [17] $end
$var wire 1 H! operand_a [16] $end
$var wire 1 I! operand_a [15] $end
$var wire 1 J! operand_a [14] $end
$var wire 1 K! operand_a [13] $end
$var wire 1 L! operand_a [12] $end
$var wire 1 M! operand_a [11] $end
$var wire 1 N! operand_a [10] $end
$var wire 1 O! operand_a [9] $end
$var wire 1 P! operand_a [8] $end
$var wire 1 Q! operand_a [7] $end
$var wire 1 R! operand_a [6] $end
$var wire 1 S! operand_a [5] $end
$var wire 1 T! operand_a [4] $end
$var wire 1 U! operand_a [3] $end
$var wire 1 V! operand_a [2] $end
$var wire 1 W! operand_a [1] $end
$var wire 1 X! operand_a [0] $end
$var wire 1 T" operand_b [31] $end
$var wire 1 U" operand_b [30] $end
$var wire 1 V" operand_b [29] $end
$var wire 1 W" operand_b [28] $end
$var wire 1 X" operand_b [27] $end
$var wire 1 Y" operand_b [26] $end
$var wire 1 Z" operand_b [25] $end
$var wire 1 [" operand_b [24] $end
$var wire 1 \" operand_b [23] $end
$var wire 1 ]" operand_b [22] $end
$var wire 1 ^" operand_b [21] $end
$var wire 1 _" operand_b [20] $end
$var wire 1 `" operand_b [19] $end
$var wire 1 a" operand_b [18] $end
$var wire 1 b" operand_b [17] $end
$var wire 1 c" operand_b [16] $end
$var wire 1 d" operand_b [15] $end
$var wire 1 e" operand_b [14] $end
$var wire 1 f" operand_b [13] $end
$var wire 1 g" operand_b [12] $end
$var wire 1 h" operand_b [11] $end
$var wire 1 i" operand_b [10] $end
$var wire 1 j" operand_b [9] $end
$var wire 1 k" operand_b [8] $end
$var wire 1 l" operand_b [7] $end
$var wire 1 m" operand_b [6] $end
$var wire 1 n" operand_b [5] $end
$var wire 1 o" operand_b [4] $end
$var wire 1 p" operand_b [3] $end
$var wire 1 q" operand_b [2] $end
$var wire 1 r" operand_b [1] $end
$var wire 1 s" operand_b [0] $end
$var wire 1 P" alu_control [3] $end
$var wire 1 Q" alu_control [2] $end
$var wire 1 R" alu_control [1] $end
$var wire 1 S" alu_control [0] $end
$var reg 32 A$ result [31:0] $end
$var wire 1 6# zero $end
$upscope $end

$scope module result4 $end
$var wire 1 h# hex_in [3] $end
$var wire 1 i# hex_in [2] $end
$var wire 1 j# hex_in [1] $end
$var wire 1 k# hex_in [0] $end
$var reg 7 B$ segments [6:0] $end
$upscope $end

$scope module result3 $end
$var wire 1 d# hex_in [3] $end
$var wire 1 e# hex_in [2] $end
$var wire 1 f# hex_in [1] $end
$var wire 1 g# hex_in [0] $end
$var reg 7 C$ segments [6:0] $end
$upscope $end

$scope module result2 $end
$var wire 1 `# hex_in [3] $end
$var wire 1 a# hex_in [2] $end
$var wire 1 b# hex_in [1] $end
$var wire 1 c# hex_in [0] $end
$var reg 7 D$ segments [6:0] $end
$upscope $end

$scope module result1 $end
$var wire 1 \# hex_in [3] $end
$var wire 1 ]# hex_in [2] $end
$var wire 1 ^# hex_in [1] $end
$var wire 1 _# hex_in [0] $end
$var reg 7 E$ segments [6:0] $end
$upscope $end

$scope module result0 $end
$var wire 1 X# hex_in [3] $end
$var wire 1 Y# hex_in [2] $end
$var wire 1 Z# hex_in [1] $end
$var wire 1 [# hex_in [0] $end
$var reg 7 F$ segments [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b0 -$
b110010000000000001010010011 .$
b1100100 0$
08$
09$
0:$
b10 ;$
0<$
1=$
1>$
b0 @$
b1100100 A$
b1000000 B$
b1000000 C$
b1000000 D$
b10 E$
b11001 F$
b100000 ?$
b100000 /$
1)
0(
0'
1&
1%
0$
0#
00
1/
0.
0-
0,
0+
0*
07
06
05
04
03
02
11
0>
0=
0<
0;
0:
09
18
0E
0D
0C
0B
0A
0@
1?
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
1)!
1(!
0'!
0&!
1%!
0$!
0#!
1"!
0!!
1~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
1q
0p
0o
1n
1m
0l
0k
0j
0i
0h
0.!
0-!
0,!
0+!
0*!
03!
02!
11!
00!
0/!
18!
07!
16!
05!
04!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0:"
09"
18"
07"
06"
15"
14"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
1A"
1@"
0?"
0>"
1="
0<"
0;"
0D"
0C"
0B"
1K"
1J"
0I"
0H"
0G"
0F"
0E"
1L"
1M"
0O"
1N"
0S"
0R"
0Q"
0P"
0s"
0r"
1q"
0p"
0o"
1n"
1m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
05#
04#
13#
02#
01#
10#
1/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
06#
0V#
0U#
1T#
0S#
0R#
1Q#
1P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
0W#
17$
16$
05$
04$
13$
02$
01$
0[#
0Z#
1Y#
0X#
0_#
1^#
1]#
0\#
0c#
0b#
0a#
0`#
0g#
0f#
0e#
0d#
0k#
0j#
0i#
0h#
0F
0G
z,$
z+$
z*$
z)$
z($
z'$
z&$
z%$
z$$
z#$
z"$
z!$
z~#
z}#
z|#
z{#
zz#
zy#
zx#
zw#
zv#
zu#
zt#
zs#
zr#
zq#
zp#
zo#
zn#
zm#
zl#
$end
#5
1!
1F
#10
0!
0F
#15
1!
1F
#20
0!
0F
#25
1!
1F
#30
0!
0F
#35
1!
1F
#40
0!
0F
#45
1!
1F
#50
0!
0F
#55
1!
1F
#60
1"
0!
1G
0F
bz0 -$
zf
ze
zd
zc
zb
za
z`
z_
z^
z]
z\
z[
zZ
zY
zX
zW
zV
zU
zT
zS
zR
zQ
zP
zO
zN
zM
zL
zK
zJ
zI
zH
xW#
bx .$
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x8!
x7!
x6!
x5!
x4!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x7$
x6$
x5$
x4$
x3$
x2$
x1$
0>$
0=$
b0 ;$
bx A$
b0 0$
0L"
0M"
x6#
08"
05"
04"
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
0N"
b1111111 F$
b1111111 E$
b1111111 D$
b1111111 C$
b1111111 B$
1E
1D
1C
1B
1A
1@
1>
1=
1<
1;
1:
19
17
16
15
14
13
12
10
1.
1-
1,
1+
1*
1(
1'
1$
1#
#65
1!
1F
#70
0!
0F
bzx -$
xg
#75
1!
1F
#80
0!
0F
#85
1!
1F
#90
0!
0F
#95
1!
1F
#100
0!
0F
#105
1!
1F
#110
0!
0F
#115
1!
1F
#120
0!
0F
#125
1!
1F
#130
0!
0F
#135
1!
1F
#140
0!
0F
#145
1!
1F
#150
0!
0F
#155
1!
1F
#160
0!
0F
#165
1!
1F
#170
0!
0F
#175
1!
1F
#180
0!
0F
#185
1!
1F
#190
0!
0F
#195
1!
1F
#200
0!
0F
#205
1!
1F
#210
0!
0F
#215
1!
1F
#220
0!
0F
#225
1!
1F
#230
0!
0F
#235
1!
1F
#240
0!
0F
#245
1!
1F
#250
0!
0F
#255
1!
1F
#260
0!
0F
#265
1!
1F
#270
0!
0F
#275
1!
1F
#280
0!
0F
#285
1!
1F
#290
0!
0F
#295
1!
1F
#300
0!
0F
#305
1!
1F
#310
0!
0F
#315
1!
1F
#320
0!
0F
#325
1!
1F
#330
0!
0F
#335
1!
1F
#340
0!
0F
#345
1!
1F
#350
0!
0F
#355
1!
1F
#360
0!
0F
#365
1!
1F
#370
0!
0F
#375
1!
1F
#380
0!
0F
#385
1!
1F
#390
0!
0F
#395
1!
1F
#400
0!
0F
#405
1!
1F
#410
0!
0F
#415
1!
1F
#420
0!
0F
#425
1!
1F
#430
0!
0F
#435
1!
1F
#440
0!
0F
#445
1!
1F
#450
0!
0F
#455
1!
1F
#460
0!
0F
#465
1!
1F
#470
0!
0F
#475
1!
1F
#480
0!
0F
#485
1!
1F
#490
0!
0F
#495
1!
1F
#500
0!
0F
#505
1!
1F
#510
0!
0F
#515
1!
1F
#520
0!
0F
#525
1!
1F
#530
0!
0F
#535
1!
1F
#540
0!
0F
#545
1!
1F
#550
0!
0F
#555
1!
1F
